version: "3.8"

services:
  kafka1:
    image: apache/kafka:3.8.0
    container_name: kafka1
    hostname: kafka1
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT'
      KAFKA_LISTENERS: 'INTERNAL://kafka1:29092,CONTROLLER://kafka1:29093,EXTERNAL://0.0.0.0:9093,DOCKER://0.0.0.0:9092'
      KAFKA_ADVERTISED_LISTENERS: 'INTERNAL://kafka1:29092,EXTERNAL://localhost:9093,DOCKER://kafka1:9092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'INTERNAL'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka1:29093'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      CLUSTER_ID: 'ciWo7IWazngRchmPES6q5A=='
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'

  app:
     build: .
     container_name: my-app
     environment:
      APP_INPUT_DIR: /app/input
      APP_OUTPUT_DIR: /app/output
      #to be used in app properties file when the application dockerized with kafka:
      DOCKER_KAFKA: kafka1:9092
     volumes:
      - ./input:/app/input
      - ./output:/app/output
     depends_on:
       - kafka1
#     networks:
#       - kafka-net
     ports:
       - "9090:9090"

#networks:
#  kafka-net:
#    driver: bridge
